一、搭建项目环境
    1.1导入pom配置文件
    1.2导入配置文件
        1.2.1   spring-service.xml、spring-mapper.xml、applicationContext.xml
        1.2.2   xxxMapper.xml
        1.2.3   SpringMVC.xml配置文件
        1.2.4   web.xml配置文件
        1.2.5   对相关配置文件进行分类存放

二、项目相关静态资源的导入
    2.1     导入提供好的前端页面，可以进行相关的修改

三、项目相关功能的实现
    3.1     用户登录
        3.1.1   使用uuid对生成用户的主键，唯一性
        3.1.2   使用md5对用户的密码进行加密，避免明文传输数据
        3.1.3   使用异常以及枚举对用户登录过程中的信息进行处理
        3.1.4   base包的建立，这个包是项目的基础包，所有的模块都会使用到该包中的类，主要有util、viewController、exception、constants
        3.1.5   用户登录过程中可能出现的情况
                1、密码错误用户名错误
                2、账号被锁定
                3、账号过期
                4、不允许的IP地址
----------------------------------------------------------------------------------------------------------------------------

打开项目之后默认访问一个login.html的页面，但是我并没有设置默认访问？？？
    此处是因为多了一个index.html文件，该文件中有一个跳转到login.html的js代码。

    3.2     市场活动的分页查询展示、添加、修改、删除等crud操作
                尽量使用Ajax进行页面请求
                提示信息使用自定义的类
        3.2.1   页面显示思路
            此处需要对activity表单进行查询，需要建立表单对应的bean实体类，
            但是页面的展示信息并不是一个单表，所以不能使用tkMapper，需要使用Map<String,String>
            同时还需要多条件查询匹配的相应的表单数据，所以需要建立相应的自定义queryPojo
            定义一个pageList()的js函数，首次访问页面即调用该函数进行页面信息展示，之后如果多条件查询，也需要调用该函数进行查询，然后展示页面


        3.2.1   分页插件的使用
            进入市场活动页面之后，页面的数据以及分页都是通过Ajax进行后台请求，传递过来json之后对数据进行处理，js动态拼接出来的，
            对于分页的拼接，此处需要引入分页插件的css样式、以及js脚本，调用提供好的方法，设置好出参数，提供传递过来的页码等信息，
            即可拼接出来分页样式，此处有一个回调函数，通过回调函数，可以实现点击页面进行分页查询的功能
        3.2.2
            对于创建市场活动，点击创建按钮，弹出一个模态窗口，然后查询出所有者的信息，即用户的name，回显在下拉列表中，
            开始日期以及结束日期都要使用日期插件，市场活动中名称为必选项，点击保存提交数据之后，后台需要给前台返回一个信息，提示用户
            添加成功。
            模态窗口中的date-dismiss属性是如果点击该按钮，模态窗口就会消失


============================================================================================================================
ERROR！！！！！！！！！
    1、对于返回返回值类型为object时，作为json被前台接收时，
        如果返回的实体类没有get、set方法时，（所以要记得自动生成toString以及get、set方法）前台无法获取到该json字符串，
        此处猜测应该与fastjson的底层处理有关系;
    2、自定义的PaginationVo中有一个引用数据类型List<T> PageInfoList = PageInfo.getList(),
        当作为json返回PaginationVo时，虽然可以获取到它是一个集合，可以知道它的size，但是却无法获取到该引用数据类型中存储的具体数据
        所以其实并不需要多余的定义这个属性，因为PageInfo中就包含了从数据库中查到的具体数据。

    3、session中设置的属性如果要在jsp页面中取出来，需要加上sessionScope域对象(待定，有时候不加sessionScope也可以取出来，可能跟变量名有关系吧)

    4、动态拼接的标签触发click事件有时候会失效（此处需要使用事件委托，jQuery的on函数）

    5、onclick="editActivityRemark('${activityRemark.id}','${activityRemark.noteContent}')"
        标签中定义一个onclick事件，如果函数中有参数，则需要添加引号，否则会报语法错误，无法调用函数

    6、动态拼接的数据，鼠标悬浮上面不能出现编辑与删除？？？？？？？(已经拼接好了元素了，可能响应慢？)，此问题与4相同，需要事件委托

        事件委托机制的概念！！！！！
        事件冒泡，子类执行父类方法。
        each()函数，如果事动态拼接的标签，调用会失效？？？


==========================================================================================================================
3.3、市场活动备注的修改与市场活动备注的删除
    修改市场活动备注的时候，需要弹出一个模态窗口（窗口中含有该条数据的信息），同时还要进行请求后台，进行数据回显，
    缺点：不必要的后台请求，会给服务器造成压力

    改进思路：因为数据都是之前请求返回过来的，都是现成的，可以在前台直接进行拼接显示，不需要进行多余的请求
        可以考虑一条数据对应一个模态窗口，该模态窗口只显示该数据的信息，这样的话n条数据就会对应n条模态窗口（此处还会有一个小bug）
        可不可以只有一个模态窗口呢？
        可以每次触发事件弹出模态窗口的时候，先清空之前的数据，然后拼接进去新的数据，这样就要求将新的数据作为参数传递进去



    市场活动细节的显示，当点击超链接进入详情页面之后，（其实是先向后台发送一个请求，回传一个session，jsp页面对session进行读取）
    市场活动的删除，要同时删除市场活动的备注

//更新每个备注的更新日期
//var reg = new RegExp( '/','g');
//var time = new Date().toLocaleDateString().replace(reg,"-");
//$('#activitySpanTime${activityRemark.id}').html(time);

=========================================================================================================================
bug:
修改市场活动备注时，修改之后再次点击修改，显示的数据不对应，所有的模态窗口中的数据都是上次输入的内容！！！！
textarea 的html()函数与val()函数的区别

3.4、数据字典的使用，数据字典主要是一些需要经常被使用的数据，不想频繁的查询数据库，所以服务器启动的时候直接查询出来
放在servletContext域对象中，之后如果需要使用该数据就直接从域对象中查取，不必要范文数据库，减小数据库的压力
其实就是用到了init-method的调用，用来初始化数据字典




